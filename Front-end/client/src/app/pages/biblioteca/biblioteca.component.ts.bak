import { Component, OnInit } from '@angular/core';
import { BibliotecaService } from '../../core/services/biblioteca.service';
import { AuthenticationService } from '../../core/services/authentication.service';
import { Observable, take, tap } from 'rxjs';
import { IJuego, IJuegoResults } from '../../interfaces/juego';
import { IBiblioteca } from '../../interfaces/Biblioteca';
import { TablaJuegosComponent } from "../../core/components/tabla-juegos/tabla-juegos.component";
import { MensajeErrorComponent } from "../../core/components/mensaje-error/mensaje-error.component";
import { JuegosService } from '../../core/services/juegos.service';
import { MatListModule } from '@angular/material/list';
import { MatCardModule } from '@angular/material/card';

@Component({
  selector: 'app-biblioteca',
  standalone: true,
  templateUrl: './biblioteca.component.html',
  styleUrl: './biblioteca.component.css',
  imports: [
    TablaJuegosComponent,
     MensajeErrorComponent,
     MatListModule,
     MatCardModule,
     
    ]
})
export class BibliotecaComponent implements OnInit {
  public juegoResults$!: Observable<IJuegoResults>;
  public biblioteca!: IBiblioteca[];
  public juegosBiblioteca: IJuego[] = [];

  errorMessage: any;
  authSubscription: any;


  constructor(
    private bibliotecaService: BibliotecaService,
    private authService: AuthenticationService,
    private juegosService: JuegosService,
  ) { }
  

  ngOnInit(): void {
    const user = this.authService.getUserDetails();
    this.getBiblioteca(user.Id).subscribe(biblioteca => {
      this.biblioteca = biblioteca; 

      if(biblioteca.length === 0){
        this.errorMessage = "No tienes juegos en tu biblioteca";
      }else{
        biblioteca.forEach(b => {
          this.juegosService.getJuego(b.idJuego).subscribe(juego => {
            this.juegosBiblioteca.push(juego);
          });  
        });      
        console.log("JUEGOS BIBLIOTECA",this.juegosBiblioteca);
      }
    });    
  }


  getBiblioteca(id: string): Observable<IBiblioteca[]> {
    return this.bibliotecaService.getBiblioteca(id)
      .pipe(tap((data) => {
        console.log(data);
      }));
  }


}
