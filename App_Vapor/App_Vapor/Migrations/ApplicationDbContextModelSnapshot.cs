// <auto-generated />
using App_Vapor.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App_Vapor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App_Vapor.Models.Desarrolladora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EditorId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EditorId");

                    b.ToTable("Desarrolladoras");
                });

            modelBuilder.Entity("App_Vapor.Models.Editor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Editores");
                });

            modelBuilder.Entity("App_Vapor.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("App_Vapor.Models.Juego", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DesarrolladoraId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DesarrolladoraId");

                    b.ToTable("Juegos");
                });

            modelBuilder.Entity("GeneroJuego", b =>
                {
                    b.Property<int>("GenerosId")
                        .HasColumnType("int");

                    b.Property<int>("JuegosId")
                        .HasColumnType("int");

                    b.HasKey("GenerosId", "JuegosId");

                    b.HasIndex("JuegosId");

                    b.ToTable("GeneroJuego");
                });

            modelBuilder.Entity("App_Vapor.Models.Desarrolladora", b =>
                {
                    b.HasOne("App_Vapor.Models.Editor", "Editores")
                        .WithMany("Desarrolladoras")
                        .HasForeignKey("EditorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editores");
                });

            modelBuilder.Entity("App_Vapor.Models.Juego", b =>
                {
                    b.HasOne("App_Vapor.Models.Desarrolladora", "Desarrolladora")
                        .WithMany("Juegos")
                        .HasForeignKey("DesarrolladoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Desarrolladora");
                });

            modelBuilder.Entity("GeneroJuego", b =>
                {
                    b.HasOne("App_Vapor.Models.Genero", null)
                        .WithMany()
                        .HasForeignKey("GenerosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Vapor.Models.Juego", null)
                        .WithMany()
                        .HasForeignKey("JuegosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App_Vapor.Models.Desarrolladora", b =>
                {
                    b.Navigation("Juegos");
                });

            modelBuilder.Entity("App_Vapor.Models.Editor", b =>
                {
                    b.Navigation("Desarrolladoras");
                });
#pragma warning restore 612, 618
        }
    }
}
